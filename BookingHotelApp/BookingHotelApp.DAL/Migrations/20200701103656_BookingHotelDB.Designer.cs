// <auto-generated />
using System;
using BookingHotelApp.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BookingHotelApp.DAL.Migrations
{
    [DbContext(typeof(BookingHotelContext))]
    [Migration("20200701103656_BookingHotelDB")]
    partial class BookingHotelDB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BookingHotelApp.DAL.Model.Account", b =>
                {
                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AccountType")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("CreatedDateOfAT")
                        .HasColumnType("datetime");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("UserName");

                    b.ToTable("Account");
                });

            modelBuilder.Entity("BookingHotelApp.DAL.Model.Customer", b =>
                {
                    b.Property<string>("CustomerID")
                        .HasColumnName("CustomerID")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CusAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CusBankCardDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CusBankCardID")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CusBankCardType")
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("CusBirthDay")
                        .HasColumnType("datetime");

                    b.Property<string>("CusEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CusGender")
                        .IsRequired()
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("CusIdentityCard")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CusPhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("CusType")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerID");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("BookingHotelApp.DAL.Model.Customer", b =>
                {
                    b.HasOne("BookingHotelApp.DAL.Model.Account", "Account")
                        .WithMany()
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
